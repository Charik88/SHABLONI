//
//  main.cpp
//  work_2
//
//  Created by Anastasiya Charykova on 20.09.2024.
//

/* Задача 2. Таблица
 Описание

 Нужно написать шаблонный класс для двумерного массива (таблицы). Все ячейки таблицы имеют один и тот же тип данных T.

 Требования к классу:

     Должен быть конструктор, получающий на входе два целых числа — количество строк и столбцов соответственно.
     Должны быть константная и неконстантная версии оператора [], возвращающего массив, к которому снова можно применить оператор [].

 Нужно, чтобы работали конструкции вида:
 * cout << table[i][j]; * table[i][j] = value;.

     Должна быть константная функция Size, возвращающая размер таблицы.

 Пример правильной работы программы

 auto test = table<int>(2, 3);
 test[0][0] = 4;
 std::cout << test[0][0]; // выводит 4 */

#include <iostream>
#include<vector>
// шаблон
template<typename T> // шаблон для типа данных
class Table{
private:
  std::vector<std::vector<T>> data; // data is declared here
public:
// конструктор принимающий кол-во строк и столбцов. /*Конструктор принимает количество `rows` (строк) и `cols` (столбцов), и инициализирует `data`, который является вектором векторов.*/

Table(int rows, int cols){
  data.resize(rows); // изменяем размер верхнего массива
  for (int i = 0; i < rows; i++){
    data[i].resize(cols);
  }
}
/*неконстантная версия оператора [] Возвращает ссылку на строку (вектор), что позволяет изменять её элементы.*/
std::vector<T>& operator[](int index){
  return data[index];
}
// константная версия оператора []
    /*Возвращает константную ссылку, чтобы предотвратить изменение данных при использовании в константном контексте.*/
const std::vector<T>& operator[](int index) const{
  return data[index]; // возвращаем константный вектор
}
// ф-ия возвращающая размер таблицы
/*Возвращает пару значений (число строк и число столбцов). Для получения количества столбцов проверяется, пуст ли вектор. */
std::pair<int, int> Size() const{ // возвращает размер таблицы
  int rows = data.size(); // кол-во строк
  int cols = (data.empty()) ? 0 : data[0].size(); // кол-во столбцов
  return {rows, cols};
}
};

int main(){
  Table<int> test(2, 3); // создаем таблицу 2 х 3
  test[0][0] = 4; //заполняем ячейки
  std::cout << test[0][0] << std::endl; //выводим значение ячйки

  auto size = test.Size(); // получаем размер таблицы
  std::cout << "Table size: " << size.first << " rows, " << size.second << " cols." << std::endl; // выводим размер таблицы

  return 0;
  
}
